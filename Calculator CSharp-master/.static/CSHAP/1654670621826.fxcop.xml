<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio\2019\professional\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="16.0">
 <Targets>
  <Target Name="D:\DIRECTORY\Calculator CSharp-master\.static\CSHAP\Compile\Calculator#\net452\Calculator#.exe">
   <Modules>
    <Module Name="calculator#.exe">
     <Messages>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">'Calculator#.exe'은(는) 외부에 표시되는 형식을 노출하므로 CLSCompliant(true)로 표시하십시오.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="Calculator">
       <Types>
        <Type Name="AboutBox2" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#AssemblyCompany" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\DIRECTORY\Calculator CSharp-master" File="AboutBox2.cs" Line="102">'AboutBox2.AssemblyCompany'의 'this' 매개 변수(Visual Basic의 경우 'Me')는 사용되지 않습니다. 멤버를 static(Visual Basic의 경우 Shared)으로 표시하거나 메서드 본문에서 'this'/'Me'를 사용하거나, 필요한 경우 하나 이상의 속성 접근자를 사용하십시오.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AssemblyCopyright" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\DIRECTORY\Calculator CSharp-master" File="AboutBox2.cs" Line="88">'AboutBox2.AssemblyCopyright'의 'this' 매개 변수(Visual Basic의 경우 'Me')는 사용되지 않습니다. 멤버를 static(Visual Basic의 경우 Shared)으로 표시하거나 메서드 본문에서 'this'/'Me'를 사용하거나, 필요한 경우 하나 이상의 속성 접근자를 사용하십시오.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AssemblyDescription" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\DIRECTORY\Calculator CSharp-master" File="AboutBox2.cs" Line="60">'AboutBox2.AssemblyDescription'의 'this' 매개 변수(Visual Basic의 경우 'Me')는 사용되지 않습니다. 멤버를 static(Visual Basic의 경우 Shared)으로 표시하거나 메서드 본문에서 'this'/'Me'를 사용하거나, 필요한 경우 하나 이상의 속성 접근자를 사용하십시오.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AssemblyProduct" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\DIRECTORY\Calculator CSharp-master" File="AboutBox2.cs" Line="74">'AboutBox2.AssemblyProduct'의 'this' 매개 변수(Visual Basic의 경우 'Me')는 사용되지 않습니다. 멤버를 static(Visual Basic의 경우 Shared)으로 표시하거나 메서드 본문에서 'this'/'Me'를 사용하거나, 필요한 경우 하나 이상의 속성 접근자를 사용하십시오.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AssemblyTitle" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\DIRECTORY\Calculator CSharp-master" File="AboutBox2.cs" Line="32">'AboutBox2.AssemblyTitle'의 'this' 매개 변수(Visual Basic의 경우 'Me')는 사용되지 않습니다. 멤버를 static(Visual Basic의 경우 Shared)으로 표시하거나 메서드 본문에서 'this'/'Me'를 사용하거나, 필요한 경우 하나 이상의 속성 접근자를 사용하십시오.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_AssemblyTitle()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="NonBreaking">
               <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\DIRECTORY\Calculator CSharp-master" File="AboutBox2.cs" Line="41">'AboutBox2.AssemblyTitle.get()'의 'string.operator !=(string, string)'에 대한 호출을 'String.IsNullOrEmpty'에 대한 호출로 바꾸십시오.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#AssemblyVersion" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\DIRECTORY\Calculator CSharp-master" File="AboutBox2.cs" Line="52">'AboutBox2.AssemblyVersion'의 'this' 매개 변수(Visual Basic의 경우 'Me')는 사용되지 않습니다. 멤버를 static(Visual Basic의 경우 Shared)으로 표시하거나 메서드 본문에서 'this'/'Me'를 사용하거나, 필요한 경우 하나 이상의 속성 접근자를 사용하십시오.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#enableParent()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\DIRECTORY\Calculator CSharp-master" File="AboutBox2.cs" Line="124">'AboutBox2.enableParent()'의 'this' 매개 변수(Visual Basic의 경우 'Me')는 사용되지 않습니다. 멤버를 static(Visual Basic의 경우 Shared)으로 표시하거나 메서드 본문에서 'this'/'Me'를 사용하거나, 필요한 경우 하나 이상의 속성 접근자를 사용하십시오.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="calcEngine" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'calcEngine'은(는) 인스턴스화되지 않은 내부 클래스입니다. 어셈블리에서 해당 코드를 제거하십시오. 이 클래스가 정적 메서드만 포함하도록 의도된 경우에는 private 생성자를 추가하여 컴파일러에서 기본 생성자가 생성되지 않도록 하십시오.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="D:\DIRECTORY\Calculator CSharp-master" File="CalcEngine.cs" Line="29">'calcEngine'의 모든 정적 필드가 선언될 때 이 필드를 초기화하고 명시적인 정적 생성자를 제거하십시오.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#assureCleared()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\DIRECTORY\Calculator CSharp-master" File="CalcEngine.cs" Line="872">'calcEngine.assureCleared()'의 'string.operator ==(string, string)'에 대한 호출을 'String.IsNullOrEmpty'에 대한 호출로 바꾸십시오.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#other_fcns(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="D:\DIRECTORY\Calculator CSharp-master" File="CalcEngine.cs" Line="489">'calcEngine.other_fcns(string)'의 순환 복잡성(cyclomatic complexity)이 47입니다. 메서드를 다시 작성하거나 리팩터링하여 복잡성을 25(으)로 줄이십시오.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\DIRECTORY\Calculator CSharp-master" File="CalcEngine.cs" Line="600">'calcEngine.other_fcns(string)'의 'string.Equals(string)'에 대한 호출을 'String.IsNullOrEmpty'에 대한 호출로 바꾸십시오.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\DIRECTORY\Calculator CSharp-master" File="CalcEngine.cs" Line="635">'calcEngine.other_fcns(string)'의 'string.Equals(string)'에 대한 호출을 'String.IsNullOrEmpty'에 대한 호출로 바꾸십시오.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#prepareOperation(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="D:\DIRECTORY\Calculator CSharp-master" File="CalcEngine.cs" Line="171">'calcEngine.prepareOperation(string)'의 순환 복잡성(cyclomatic complexity)이 62입니다. 메서드를 다시 작성하거나 리팩터링하여 복잡성을 25(으)로 줄이십시오.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#solve()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\DIRECTORY\Calculator CSharp-master" File="CalcEngine.cs" Line="364">'calcEngine.solve()'의 'string.Equals(string)'에 대한 호출을 'String.IsNullOrEmpty'에 대한 호출로 바꾸십시오.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\DIRECTORY\Calculator CSharp-master" File="CalcEngine.cs" Line="366">'calcEngine.solve()'의 'string.Equals(string)'에 대한 호출을 'String.IsNullOrEmpty'에 대한 호출로 바꾸십시오.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\DIRECTORY\Calculator CSharp-master" File="CalcEngine.cs" Line="394">'calcEngine.solve()'의 'string.Equals(string)'에 대한 호출을 'String.IsNullOrEmpty'에 대한 호출로 바꾸십시오.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\DIRECTORY\Calculator CSharp-master" File="CalcEngine.cs" Line="415">'calcEngine.solve()'의 'string.Equals(string)'에 대한 호출을 'String.IsNullOrEmpty'에 대한 호출로 바꾸십시오.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Calculator" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#helpPopup(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\DIRECTORY\Calculator CSharp-master" File="Form1.cs" Line="559">'Exception'보다 좀 더 구체적인 예외를 catch하거나 예외를 다시 throw하려면 'Calculator.helpPopup(object, EventArgs)'을(를) 수정하십시오.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#menu_Actions(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\DIRECTORY\Calculator CSharp-master" File="Form1.cs" Line="529">'object'보다 좀 더 구체적인 예외를 catch하거나 예외를 다시 throw하려면 'Calculator.menu_Actions(string)'을(를) 수정하십시오.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#number_btn(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="D:\DIRECTORY\Calculator CSharp-master" File="Form1.cs" Line="40">'Calculator.number_btn(object, EventArgs)'의 순환 복잡성(cyclomatic complexity)이 26입니다. 메서드를 다시 작성하거나 리팩터링하여 복잡성을 25(으)로 줄이십시오.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Test_Appending" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#clearCalcEngine()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\DIRECTORY\Calculator CSharp-master" File="TestHarness.cs" Line="93">'Test_Appending.clearCalcEngine()'의 'this' 매개 변수(Visual Basic의 경우 'Me')는 사용되지 않습니다. 멤버를 static(Visual Basic의 경우 Shared)으로 표시하거나 메서드 본문에서 'this'/'Me'를 사용하거나, 필요한 경우 하나 이상의 속성 접근자를 사용하십시오.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Test_MathFunctions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#clearCalcEngine()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\DIRECTORY\Calculator CSharp-master" File="TestHarness.cs" Line="466">'Test_MathFunctions.clearCalcEngine()'의 'this' 매개 변수(Visual Basic의 경우 'Me')는 사용되지 않습니다. 멤버를 static(Visual Basic의 경우 Shared)으로 표시하거나 메서드 본문에서 'this'/'Me'를 사용하거나, 필요한 경우 하나 이상의 속성 접근자를 사용하십시오.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Test_Memory" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#clearCalcEngine()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\DIRECTORY\Calculator CSharp-master" File="TestHarness.cs" Line="162">'Test_Memory.clearCalcEngine()'의 'this' 매개 변수(Visual Basic의 경우 'Me')는 사용되지 않습니다. 멤버를 static(Visual Basic의 경우 Shared)으로 표시하거나 메서드 본문에서 'this'/'Me'를 사용하거나, 필요한 경우 하나 이상의 속성 접근자를 사용하십시오.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Test_MiscFunctions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#clearCalcEngine()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\DIRECTORY\Calculator CSharp-master" File="TestHarness.cs" Line="640">'Test_MiscFunctions.clearCalcEngine()'의 'this' 매개 변수(Visual Basic의 경우 'Me')는 사용되지 않습니다. 멤버를 static(Visual Basic의 경우 Shared)으로 표시하거나 메서드 본문에서 'this'/'Me'를 사용하거나, 필요한 경우 하나 이상의 속성 접근자를 사용하십시오.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Test_TrigFunctions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#clearCalcEngine()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\DIRECTORY\Calculator CSharp-master" File="TestHarness.cs" Line="237">'Test_TrigFunctions.clearCalcEngine()'의 'this' 매개 변수(Visual Basic의 경우 'Me')는 사용되지 않습니다. 멤버를 static(Visual Basic의 경우 Shared)으로 표시하거나 메서드 본문에서 'this'/'Me'를 사용하거나, 필요한 경우 하나 이상의 속성 접근자를 사용하십시오.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Calculator.Properties">
       <Types>
        <Type Name="Resources" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'Resources'은(는) 인스턴스화되지 않은 내부 클래스입니다. 어셈블리에서 해당 코드를 제거하십시오. 이 클래스가 정적 메서드만 포함하도록 의도된 경우에는 private 생성자를 추가하여 컴파일러에서 기본 생성자가 생성되지 않도록 하십시오.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Culture" Kind="Property" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Culture()" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\DIRECTORY\Calculator CSharp-master\Properties" File="Resources.Designer.cs" Line="55">'Resources.Culture.get()'에 업스트림 공용 호출자 또는 보호된 호출자가 없습니다.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_Culture(System.Globalization.CultureInfo)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\DIRECTORY\Calculator CSharp-master\Properties" File="Resources.Designer.cs" Line="58">'Resources.Culture.set(CultureInfo)'에 업스트림 공용 호출자 또는 보호된 호출자가 없습니다.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ResourceManager" Kind="Property" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_ResourceManager()" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\DIRECTORY\Calculator CSharp-master\Properties" File="Resources.Designer.cs" Line="40">'Resources.ResourceManager.get()'에 업스트림 공용 호출자 또는 보호된 호출자가 없습니다.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="Settings" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Default" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Default()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2022-06-08 06:43:42Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\DIRECTORY\Calculator CSharp-master\Properties" File="Settings.Designer.cs" Line="21">'Settings.Default.get()'에 업스트림 공용 호출자 또는 보호된 호출자가 없습니다.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502">
   <Name>지나치게 복잡하게 만들지 마십시오.</Name>
   <Description>메서드를 지나치게 복잡하게 구현하면 코드를 이해하거나 유지 관리하는 것이 어려워집니다.</Description>
   <Resolution Name="Default">{0}의 순환 복잡성(cyclomatic complexity)이 {1}입니다. 메서드를 다시 작성하거나 리팩터링하여 복잡성을 {2}(으)로 줄이십시오.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182212.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>호출되지 않는 프라이빗 코드를 사용하지 마십시오.</Name>
   <Description>외부에 나타나지 않으며 알려진 런타임 진입점이 아닌 호출되지 않는 코드가 있습니다. 이 위반으로 인해 오류가 발생하는 경우에는 Visual Studio Code Analysis 팀에 문제 보고서를 보내십시오.</Description>
   <Resolution Name="Default">{0}에 업스트림 공용 호출자 또는 보호된 호출자가 없습니다.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812">
   <Name>인스턴스화되지 않은 내부 클래스를 사용하지 마십시오.</Name>
   <Description>인스턴스화되지 않은 내부 클래스가 발견되었습니다. 이 규칙은 런타임에 바인딩된 생성을 찾기 위한 것이 아니며 형식의 인스턴스가 이 방법(예: Activator.CreateInstance를 사용하거나 TypeConverter 생성자에 해당 형식을 인수로 전달하는 방법)으로만 생성되는 경우 가양성(false positives)을 유발할 수 있습니다.</Description>
   <Resolution Name="Default">{0}은(는) 인스턴스화되지 않은 내부 클래스입니다. 어셈블리에서 해당 코드를 제거하십시오. 이 클래스가 정적 메서드만 포함하도록 의도된 경우에는 private 생성자를 추가하여 컴파일러에서 기본 생성자가 생성되지 않도록 하십시오.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182265.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>일반적인 예외 형식을 catch하지 마십시오.</Name>
   <Description>Exception 또는 SystemException을 catch하면 안 됩니다. 일반적인 예외 형식을 catch하면 라이브러리 사용자에게 런타임 문제가 표시되지 않아 디버깅이 복잡해질 수 있습니다. 적절하게 처리할 수 있는 예외만 catch해야 합니다.</Description>
   <Resolution Name="Default">{1}보다 좀 더 구체적인 예외를 catch하거나 예외를 다시 throw하려면 {0}을(를) 수정하십시오.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810">
   <Name>참조 형식 정적 필드를 인라인으로 초기화하십시오.</Name>
   <Description>정적 필드는 선언할 때 초기화되어야 합니다. 명시적인 정적 생성자에서 정적 데이터를 초기화하면 코드의 성능이 떨어집니다.</Description>
   <Resolution Name="Default">{0}의 모든 정적 필드가 선언될 때 이 필드를 초기화하고 명시적인 정적 생성자를 제거하십시오.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182275.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">CriticalWarning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>CLSCompliantAttribute로 어셈블리 표시</Name>
   <Description>어셈블리는 CLSCompliant 특성을 사용하여 CLS 규격을 명시적으로 기술해야 합니다. 이 특성이 없는 어셈블리는 CLS 규격이 아닙니다. 어셈블리, 모듈 및 형식은 어셈블리, 모듈 또는 형식의 일부가 CLS 규격이 아니어도 CLS 규격이 될 수 있습니다. 다음과 같은 규칙이 적용됩니다. 1) 해당 요소가 CLSCompliant로 표시되면 모든 비규격 멤버의 CLSCompliant 특성의 인수를 false로 설정해야 합니다. 2) CLS 비규격 멤버 각각에 대해 비교 가능한 CLS 규격 대체 멤버가 제공되어야 합니다.</Description>
   <Resolution Name="Default">{0}은(는) 외부에 표시되는 형식을 노출하므로 CLSCompliant(true)로 표시하십시오.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>멤버를 static으로 표시</Name>
   <Description>인스턴스 데이터에 액세스하지 않거나 인스턴스 메서드를 호출하지 않는 메서드는 static(Visual Basic의 경우 Shared)으로 표시할 수 있습니다. 이렇게 하면 컴파일러는 이 멤버에 대한 비가상 호출 사이트를 내보내므로 런타임에서 개별 호출에 대해 현재 개체 포인터가 null이 아닌지 확인하는 검사가 수행되지 않습니다. 성능에 민감한 코드의 경우 이 방법으로 성능을 크게 향상시킬 수 있습니다. 일부의 경우 현재 개체 인스턴스에 액세스하지 못하는 것은 정확성에 문제가 있기 때문일 수 있습니다.</Description>
   <Resolution Name="Default">{0}의 'this' 매개 변수(Visual Basic의 경우 'Me')는 사용되지 않습니다. 멤버를 static(Visual Basic의 경우 Shared)으로 표시하거나 메서드 본문에서 'this'/'Me'를 사용하거나, 필요한 경우 하나 이상의 속성 접근자를 사용하십시오.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820">
   <Name>문자열 길이를 사용하여 빈 문자열을 테스트하십시오.</Name>
   <Description>문자열을 테스트하려면 String.Length가 0과 같은지 검사하십시오. "".Equals(someString) 및 String.Empty.Equals(someString)와 같은 구문은 문자열 길이를 테스트하는 것보다 비효율적입니다. 이러한 메서드를 someString.Length == 0과 같은 검사로 바꾸십시오.</Description>
   <Resolution Name="IsNullOrEmpty">{1}의 {0}에 대한 호출을 'String.IsNullOrEmpty'에 대한 호출로 바꾸십시오.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182279.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">범주</String>
  <String Key="Certainty">확신도</String>
  <String Key="CollapseAll">모두 축소</String>
  <String Key="CheckId">확인 ID</String>
  <String Key="Error">오류</String>
  <String Key="Errors">개 오류</String>
  <String Key="ExpandAll">모두 확장</String>
  <String Key="Help">도움말</String>
  <String Key="Line">줄</String>
  <String Key="Messages">메시지</String>
  <String Key="LocationNotStoredInPdb">[Pdb에 위치가 저장되지 않음]</String>
  <String Key="Project">프로젝트</String>
  <String Key="Resolution">확인</String>
  <String Key="Rule">규칙</String>
  <String Key="RuleFile">규칙 파일</String>
  <String Key="RuleDescription">규칙 설명</String>
  <String Key="Source">소스</String>
  <String Key="Status">상태</String>
  <String Key="Target">대상</String>
  <String Key="Warning">경고</String>
  <String Key="Warnings">경고</String>
  <String Key="ReportTitle">코드 분석 보고서</String>
 </Localized>
</FxCopReport>
